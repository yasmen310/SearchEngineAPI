# Generated by Django 5.0.3 on 2024-05-15 08:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('track_id', models.CharField(max_length=6, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\d{6}$', 'Track_id must be exactly 6 digits')])),
                ('track_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=8, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\d{8}$', 'User_id must be exactly 8 digits')])),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=25, validators=[django.core.validators.RegexValidator(code='invalid_password', message='Password must contain at least one digit and one character, and be at least 8 characters long.', regex='^(?=.*[0-9])(?=.*[a-zA-Z]).{8,}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.question')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.track'),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.CharField(max_length=4, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\d{4}$', 'Book_id must be exactly 4 digits')])),
                ('book_name', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.track')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='MyApp.user')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='MyApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAndAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.answer')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.book')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.question')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.user'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.book')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MyApp.user')),
            ],
        ),
    ]
